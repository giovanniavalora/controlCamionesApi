version: '3.7'

services:
  web:      #apimobile
    build:
      context: ./apimobile
      dockerfile: Dockerfile.prod
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 --reload
    volumes:
      - static_volume:/home/apimobile/web/staticfiles
      - media_volume:/home/apimobile/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db

  apiman:   #apimantenedor
    build: ./apimantenedor
    # command: python manage.py runserver 127.0.0.1:5000
    command: python manage.py runserver 0.0.0.0:5000
    volumes:
      - ./apimantenedor/:/usr/src/apimantenedor/
      #agregar static_volume y media_volume para centralizar el almacenamiento y servir desde un solo lugar?
    ports:
      - "5000:5000"
    env_file:
      - ./.env.prod
    depends_on:
      - db

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db

  mantenedor:
    container_name: mantenedor
    restart: always
    build: 
      context: ./mantenedor
      dockerfile: Dockerfile.prod
    volumes:
      - ./mantenedor/:/src/mantenedor
      - node_modules:/src/mantenedor/node_modules
    expose: 
      - 3000
    # ports:
    #   - "80:80"
    command: npm run dev
    

  nginx:
    build: ./nginx
    restart: unless-stopped
    volumes:
      - static_volume:/home/apimobile/web/staticfiles
      - media_volume:/home/apimobile/web/mediafiles
      # - ./data/certbot/conf:/etc/letsencrypt
      # - ./data/certbot/www:/var/www/certbot
    ports:
      - "1337:8000"
      - "443:443"
      - "80:80"
    # command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    # depends_on:
    #   - web

  # certbot:
  #   image: certbot/certbot
  #   restart: unless-stopped
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  static_volume:
  media_volume:
  node_modules:
