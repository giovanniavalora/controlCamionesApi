version: '3.7'

services:
  apimob:
    build: ./apimobile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./apimobile/:/usr/src/apimobile/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - db
    networks:
      - app-network

  apiman:
    build: ./apimantenedor
    command: python manage.py runserver 0.0.0.0:5000
    volumes:
      - ./apimantenedor/:/usr/src/apimantenedor/
    ports:
      - 5000:5000
    env_file:
      - ./.env.dev
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: postgres:12.0-alpine
    restart: always
    volumes:
        - postgres_data:/var/lib/postgresql/data/
        - ./backup:/backups
    environment:
        - POSTGRES_USER=ohl
        - POSTGRES_PASSWORD=ohl
        - POSTGRES_DB=ohlcamiones
    networks:
      - app-network
  
  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
        - ./backup:/backups
    links:
        - db
    depends_on:
        - db
    environment:
        - POSTGRES_HOST=db
        - POSTGRES_DB=ohlcamiones
        - POSTGRES_USER=ohl
        - POSTGRES_PASSWORD=ohl
      #  - POSTGRES_PASSWORD_FILE=/run/secrets/db_password <-- alternative for POSTGRES_PASSWORD (to use with docker secrets)
        - POSTGRES_EXTRA_OPTS=-Z9 --schema=public --blobs
        # - SCHEDULE=@every 12h00m00s #cada 12 horas
        - SCHEDULE=@daily
        - BACKUP_KEEP_DAYS=7
        - BACKUP_KEEP_WEEKS=4
        - BACKUP_KEEP_MONTHS=6
        - HEALTHCHECK_PORT=81
    networks:
      - app-network

  mantenedor:
    container_name: mantenedor
    restart: always
    build: ./mantenedor
    volumes:
      - ./mantenedor/:/src/mantenedor
      # - /src/mantenedor/node_modules
    ports: 
      - 3000:3000
    command: npm run dev
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
